{
    "name": "@myorm/mysql",
    "version": "0.0.13",
    "homepage": "https://github.com/traviszuleger/myorm",
    "repository": {
        "type": "git",
        "url": "https://github.com/traviszuleger/myorm"
    },
    "description": "Provides an easy way to interact with the mysql2 connector by creating Contexts connected to a table in your MySQL database with only the need of defining your tables as TypeScript types.",
    "main": "./dist/cjs/index.js",
    "types": "./dist/cjs/types/index.d.ts",
    "scripts": {
        "document": "jsdoc ./lib/src/ -t ./node_modules/docdash -c ./jsdoc-conf.json",
        "clean": "del /S /Q .\\dist",
        "build": "npm run clean && npm run build:esm && npm run build:cjs",
        "build:esm": "tsc -p ./configs/tsconfig.esm.json",
        "build:cjs": "tsc -p ./configs/tsconfig.cjs.json",
        "test": "node ./lib/tests/test.js",
        "prepack": "npm run build"
    },
    "keywords": [
        "mysql",
        "context",
        "typescript",
        "C#",
        "table",
        "query",
        "queries",
        "insert",
        "update",
        "listener",
        "database",
        "get",
        "getAll",
        "insertOne",
        "insertMany",
        "updateOne",
        "updateMany",
        "deleteOne",
        "deleteMany",
        "truncate",
        "left join",
        "include",
        "relationships",
        "hasOne",
        "hasMany"
    ],
    "author": "Travis Zuleger",
    "license": "(MIT OR Apache-2.0)",
    "type": "module",
    "dependencies": {
        "mysql2": "^3.0.1"
    },
    "devDependencies": {
        "@types/node": "^18.11.18",
        "docdash": "^2.0.1",
        "typescript": "^4.9.4"
    },
    "files": [
        "dist/**/*"
    ],
    "exports": {
        ".": {
            "import": {
                "types": "./dist/esm/types/index.d.ts",
                "default": "./dist/esm/index.js"
            },
            "require": {
                "types": "./dist/cjs/types/index.d.ts",
                "default": "./dist/cjs/index.js"
            }
        }
    }
}
